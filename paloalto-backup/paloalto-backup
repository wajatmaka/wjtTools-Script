#!/bin/python3
# 
#  ---------------------------------------------------------------------------------
#  "THE BEER-WARE LICENSE" (Revision 42):
#  <phk@FreeBSD.ORG> wrote this file.  As long as you retain this notice you
#  can do whatever you want with this stuff. If we meet some day, and you think
#  this stuff is worth it, you can buy me a beer or coffee in return. Poul-Henning Kamp
#  ---------------------------------------------------------------------------------
# 
# Created : Dwiyan Galuh W
# https://blog.wajatmaka.com
# https://github.com/wajatmaka


""" Import Library Request HTTP, TIME and SSL """
import requests
import urllib3
import datetime
from configparser import ConfigParser

""" Exception Error SSL """
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
requests.packages.urllib3.disable_warnings() 


""" Get Request From Paloalto with user syslog """
try:
    parser = ConfigParser()
    parser.read('paloalto.cfg',encoding='utf-8')
    for section_name in parser.sections():
          print("HOST : "+section_name)
          IP = parser.get(section_name, 'IP')
          TOKEN = parser.get(section_name, 'TOKEN')
          if IP == "" or TOKEN == "":
             print("Tidak Ada Isi Variable di konfigurasi paloalto.cfg | Proses Dibatalkan")
             print()
          else: 
             #print(IP+TOKEN)
             url = 'https://'+IP+'/api/?type=export&category=configuration&key='+TOKEN
             headers = {'accept': 'application/xml;q=0.9, */*;q=0.8'}
             print("Proses Backup Dimulai")
             response = requests.get(url, headers=headers,verify=False,timeout=15)
             if response.status_code == 200:
                """ Write Configuration in Disk """
                date = datetime.datetime.now().strftime("%Y-%m-%d")
                base_file = "~/paloalto-config-"+IP+"-"+date+".xml"
                f_data  = open(base_file, "w")
                f_data.write(response.text);
                f_data.close
                print("Proses Backup Selesai")
                print()
             else:
                print("Data Kosong")

except requests.exceptions.RequestException as err:
    print ("Request Terjadi Kesalahan",err)
    exit(1)
except requests.exceptions.HTTPError as errh:
    print ("HTTP Terjadi Kesalahan",errh)
    exit (1)
except requests.exceptions.ConnectionError as errc:
    print ("Terjadi Kesalahan Koneksi:",errc)
    exit(1)
except resuests.exceptions.Timeout as errt:
    print ("Terjadi Kesalahan Timeout:",errt)    
    exit(1)

